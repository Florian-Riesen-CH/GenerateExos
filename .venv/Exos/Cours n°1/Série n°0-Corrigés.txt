Corrections exercises

Exercice: 1
Écrivez un algorithme qui recherche dans un tableau non trié l'élément maximal et qui retourne sa position.

def trouver_max_position(tableau):
    max_valeur = tableau[0]
    max_position = 0
    pour i dans la plage(len(tableau)):
        si tableau[i] > max_valeur:
            max_valeur = tableau[i]
            max_position = i
    retourner max_position


Exercice: 2
Écrivez un algorithme qui détermine si un graphe non orienté est connexe ou non.

def est_connexe(graphe):
    marques = {sommet: False pour sommet dans graphe}
    pile = [liste(graphe.keys())[0]]
    tant que pile:
        sommet = pile.pop()
        si non marques[sommet]:
            marques[sommet] = True
            pour voisin dans graphe[sommet]:
                pile.append(voisin)
    si False dans marques.valeurs():
        retourner True
    retourner False


